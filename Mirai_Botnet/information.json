{"description":"mirai bonet","goal":"<h3>Come funziona la mirai botnet?</h3>\n<p><br />Le fasi della creazione e dell&rsquo;attacco con una Mirai Botnet possono essere riassunte nei seguenti passi:<br />1)&nbsp;&nbsp;&nbsp; Il botmaster si connette al server Scan/Loader per eseguire il comando ./loader<br />2)&nbsp;&nbsp;&nbsp; In questo modo si inizializza la scansione sulla rete di device IoT vulnerabili con Telnet sulla porta 23<br />3)&nbsp;&nbsp;&nbsp; Nel caso in cui si trova un dispositivo vulnerabile si provano tramite brute force una lista nota di username e password di default. Nel caso in cui si riesce ad effettuare il login nel dispositivo sono inviate dallo Scan/Loader al server C&amp;C, le credenziali e l&rsquo;indirizzo IP del dispositivo appena trovato.<br />4)&nbsp;&nbsp;&nbsp; La C&amp;C manda un nuovo comando allo Scan/Loader con le informazioni del dispositivo vulnerabile per iniziare la vera e propria fase di infezione del bot<br />5)&nbsp;&nbsp;&nbsp; Il server Scan/Loader infetta il device, che entrer&agrave; ora a far parte effettivamente della mirai botnet<br />6)&nbsp;&nbsp;&nbsp; Ora che nella rete &egrave; presente almeno 1 bot il botmaster pu&ograve; sferrare un attacco utilizzando la C&amp;C, specificando il tipo di attacco (syn packet flood, ack packet flood), la durata dell&rsquo;attacco ed ovviamente l&rsquo;indirizzo del target.<br />7)&nbsp;&nbsp;&nbsp; Il bot effettua il tipo di richiesta che gli &egrave; stata comandata dalla C&amp;C verso l&rsquo;indirizzo IP della vittima.<br />8)&nbsp;&nbsp;&nbsp; Il device IoT di cui ci siamo impossessati oltre a fungere da attaccante ora pu&ograve; giocare il ruolo di scanner e quindi anch&rsquo;esso potr&agrave; eseguire la scansione della rete alla ricerca di nuovi dispostivi IoT da infettare con il service Telnet attivo e la porta 23 aperta come prima.<br />9)&nbsp;&nbsp;&nbsp; Una volta che il nostro bot/scanner ha trovato un dispositivo IoT vulnerabile invia il report alla C&amp;C.<br />10)&nbsp;&nbsp;&nbsp; La C&amp;C invia i dati del nuovo dispositivo vulnerabile al server Loader.<br />11)&nbsp;&nbsp;&nbsp; Il Loader si occuper&agrave; di infettare il bot<br />12)&nbsp;&nbsp;&nbsp; A questo punto quando il botmaster tramite la C&amp;C vorr&agrave; lanciare un nuovo attacco questo sar&agrave; eseguito anche del secondo bot<br />La fase di Scanning della rete alla ricerca di nuovi dispostivi infettabili viene eseguite in loop da tutti i dispostivi IoT che fanno parte della botnet con lo scopo di aver a disposizione un numero considerevole di bot nella propria rete al fine di render&agrave; ancora pi&ugrave; letali gli attacchi.</p>\n<p><img src=\"https://www.researchgate.net/profile/Christopher_Mcdermott9/publication/329316466/figure/fig1/AS:745697364152331@1554799514851/Mirai-Botnet-Infection-Methodology.png\" alt=\"\" width=\"740\" height=\"350\" /></p>\n<h3>Mirai Botnet con Docker</h3>\n<p><br />Il nostro obbiettivo &egrave; quello di riprodurre uno scenario di attacco con la mirai botnet.</p>\n<p>Nell&rsquo;immagine abbiamo una rappresentazione grafica del nostro docker-compose. Come possiamo notare ad alcuni elementi &egrave; stato assegnato un indirizzo IP statico, questa scelta &egrave; stata fatta semplicemente per fini pratici, ed in seguito chiariremo il perch&eacute;. Utilizzando il docker-compose vengono istanziati tutti gli elementi che vediamo in figura. <br />Tramite il comando &ldquo;telnet 172.20.0.2&rdquo; sar&agrave; possibile collegarsi alla C&amp;C e poter conoscere il numero di bot presenti nella rete, vedere quali sono le tipologie di attacco che &egrave; possibile utilizzare ed infine poter eseguire un attacco vero e proprio. Per vedere quali sono le tipologie di attacco basta inviare il comando &ldquo;?&rdquo; alla C&amp;C.<br />Il bot_vittima rappresenta un dispositivo IoT vulnerabile, infatti come si pu&ograve; vedere dal Dockerfile di questo elemento sono stati impostati username e password come root:root. Inoltre, tale elemento esporr&agrave; verso l&rsquo;esterno il porto 23 con ad esso associato il servizio telnet. Abbiamo deciso di assegnare un indirizzo IP statico al bot_vittima in modo da poter subito cercare tale indirizzo su wireshark e poter subito constatare che anche il dispositivo IoT appena infettato ha partecipato all&rsquo;attacco.<br />Scanner e bot_n sono basati sulla stessa immagine docker, questo perch&eacute; in questa simulazione &egrave; possibile inserire manualmente un bot nella rete. Infatti, il bot richiede 4 parametri di input quando viene eseguito:<br />&lt;cnc ip&gt; &lt;locali p&gt; &lt;callback ip&gt; &lt;scanner 0/1&gt;<br />Istanziando un bot con lo scanner=1, stiamo aggiungendo un bot che andr&agrave; ad eseguire lo scanning della rete alla ricerca di dispostivi IoT vulnerabili (il nostro bot_vittima).<br />Istanziando un bot con lo scanner=0, stiamo aggiungendo un bot che non andr&agrave; ad eseguire lo scanning della rete, ma sar&agrave; attivo in maniera passiva in attesa di comandi da parte della C&amp;C.<br />Il loader &egrave; la componente che si occuper&agrave; di infettare i nuovi dispositivi vulnerabili scoperti dallo scanner. Il suo indirizzo IP &egrave; statico, perch&eacute; tale indirizzo deve essere inserito come indirizzo callback per il bot, ed quindi necessario conoscerlo a priori.<br />Il server_vittima, &egrave; ovviamente il target del nostro attacco ed &egrave; contattabile all&rsquo;indirizzo 172.19.0.2. Esso si basa sull&rsquo;immagine docker httpd e rappresenta un semplice webserver contattabile sulla porta 1111.</p>","solution":"<h3>Come riprodurre lo scenario di attacco?</h3>\n<p><br />Una volta inizializzato il laboratorio utilizzando la shell di comando del proprio host &egrave; possibile contattare la C&amp;C tramite &ldquo;<code>telnet 172.20.0.2&rdquo;</code> ed inserendo come username e password &ldquo;root&rdquo;. Una volta entrati nella C&amp;C aspettiamo che tutti i bot siano connessi ad essa (di default il laboratorio istanzia 30 bot).<br />&nbsp;<br />Tramite DPS &egrave; possibile collegarsi alla shell dello scanner per poter iniziare la fase di scanning vera e propria utilizzando il comando &ldquo;<code>sh init.sh 1</code>&rdquo;. Se tutto andr&agrave; a buon fine noteremo che il numero di bot connessi alla nostra rete sar&agrave; 32, uno sar&agrave; lo scanner e l&rsquo;altro sar&agrave; il bot_vittima di cui ci saremo impossessati.<br />A questo punto sempre utilizzando DPS &egrave; possibile collegarsi alla shell di uno dei bot_n. Da quest&rsquo;ultimo effettuare il ping sull&rsquo;indirizzo target della vittima tramite &ldquo;<code>ping 172.19.0.2</code>&rdquo;.<br />&nbsp;<br /><br /><br />A questo punto utilizzando la C&amp;C &egrave; possibile sferrare un attacco ai danni del nostro server vittima. Ad esempio, lanciamo un attacco del tipo &ldquo;<code>udpplain 172.19.0.2 30</code>&rdquo;, dove in ordine abbiamo specificato tipo di attacco, indirizzo target e durata dell&rsquo;attacco.<br />&nbsp;<br /><br />Come possiamo vedere il tempo aumenta, indice del fatto che il server vittima sta venendo stressato dall&rsquo;attacco in corso. In questo modo &egrave; provata l&rsquo;efficacia dell&rsquo;attacco, che essendo di tipo &ldquo;flooding&rdquo;, non va necessariamente a esaurire le risorse del server, ma lo rende pian piano unresponsive, andando ad &ldquo;allagare&rdquo; la banda disponibile in prossimit&agrave; del target. In questo caso, il server &egrave; occupato a gestire tante richieste di sincronizzazione TCP e impiega pi&ugrave; tempo a rispondere a semplici echo_request icmp.<br />Utilizzando wireshark &egrave; possibile verificare che anche il bot_vittima (172.19.0.5) ha partecipato all&rsquo;attacco.</p>","author":"mdeluca"}
