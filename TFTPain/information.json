{"description":"A simple lab about scanning, enumeration and exploiting of FTP/TFTP.","goal":"<p>The goal is to find the alive and vulnerable machines among the IPs obtained at the end of the footprinting phase and to exploit their vulnerabilities and exfiltrate some sensitive information.</p>","solution":"<p>First of all we have to download the following images through the \"docker pull\" command:<br /><br /><em>emalderson/ftplab:ftp_1.0</em><br /><em>emalderson/ftplab:tftp_1.0</em><br /><em>emalderson/ftplab:attacker_1.0</em><br /><br />Now we can start the lab and create an hacktool using the \"emalderson/ftplab:attacker_1.0\" image, then attach it to the network.<br /><br />Let's suppose that the output of the footprinting phase gave us the following block of IPs: <br />193.20.1.0/24<br /><br />Now we can proceed with the scanning phase.<br />The first thing to do is the so called ping sweep, which has the objective of finding the alive machines (the ones responding to an echo request), narrowing the field of the possible targets.<br />We can note that the \"ping sweep\" can be done using tcp/udp packets as well. This can be useful in a scenario in which the icmp traffic is blocked, but this is not the case.<br />To do this, we can use the program nmap in this way:<br /><br /><em>nmap -n -sn --send-ip -PE 193.20.1.1-255</em><br /><br />With this command we are telling the program to avoid resolving the IPs through the DNS service (-n), send only IP packets (--send-ip) and, in particular, send only ICMP Echo Request (-PE).<br />The output of the command is reported below:</p>\n<p><br />//IMMAGINE</p>\n<p><br />From that output we can see that there are 4 hosts up, where the \".1\" is the default gateway and one of them is the attacker machine. To find out which is the attacker machine, we can launch an \"ifconfig\" command. It shows that the attacker machine has the IP \".4\".<br /><br />At this point we can start with the \"port scanning\" phase on a reduced number of hosts (only 2 hosts) using nmap with the following command:</p>\n<p><br /><em>nmap -n -sT -Pn 193.20.1.2-3</em></p>\n<p><br />With this command we are telling the program to perform a TCP connect scan (-sT) on 1000 ports of possible interest (by default) treating all hosts as alive (-Pn) which means skipping the ping sweep because we have already performed it, avoiding again the DNS resolution (-n).<br />The output of the command is reported below:</p>\n<p><br />//IMMAGINE</p>\n<p><br />We can do the same thing using the -sU flag, which performs an UDP scan:</p>\n<p><br /><em>nmap -n -sU -Pn 193.20.1.2-3</em></p>\n<p><br />The output of the command is reported below:</p>\n<p><br />//IMMAGINE</p>\n<p><br />We have discovered that there are 2 ports open, in particular there is a port 21/tcp open on the \".2\" host, which is commonly used for FTP, and a port 69/udp open on the \".3\" host, which is commonly used for TFTP.<br /><br /></p>\n<p>Now we can go ahead and start the scanning phase. In this phase we will try to detect what is the actual service behind the ports we have just found and their versions. this is useful because if we found a vulnerable version of a service we could exploit it.</p>\n<p>This can be done again through nmap with the following command:</p>\n<p><br /><em>nmap -n -sV -p 21 193.20.1.2</em></p>\n<p>&nbsp;</p>\n<p>The purpose of the option -sV is to perform a version scan.</p>\n<p>The output of the command is reported below:</p>\n<p>//IMMAGINE</p>\n<p>Now we're ready to try and exploit those services. We know that with TFTP we have to know the exact name of a resource to get it, so this appears not to be out target.</p>\n<p>So let's try with the FTP service. We know that we may need an username and a password, maybe this username could have been obtained during the footprinting phase, but this is not the case.</p>\n<p>So what could we do? Remember that FTP has a feature called \"anonymous login\" which, if enabled, permits anyone to login. Let's find out if this feature is enabled typing \"ftp\", starting the ftp client.</p>\n<p>Now we have to type \"open\" and then, when requested, type the IP of the target, which is 192.20.1.2.</p>\n<p>//IMMAGINE</p>\n<p>Now we are prompted for a username, so we can type in \"anonymous\" and insert no password.</p>\n<p>In this case we are allowed to enter!</p>\n<p>//IMMAGINE</p>\n<p>Now we can type in \"ls\" to list the content inside the folder</p>\n<p>//IMMAGINE</p>\n<p>We found something! Let's try to get it using the \"get\" command!</p>\n<p>//IMMAGINE</p>\n<p>Oh no, we can't... but don't forget to write down the name of this file, it could be an useful information anyway. Infact we could try to use this name on the TFTP server!</p>\n<p>To do this we have to quit the FTP session (with the \"quit\" command) and start the TFTP client typing \"tftp\" followed by the IP of the target, which is 193.20.1.3.</p>\n<p>Now let's try to get the same file we found in the other host.</p>\n<p>//IMMAGINE</p>\n<p>GOT IT! This file contains a lot of usernames and passwords (credits to giper45 and his \"Topolinux\" lab for the information copypasted in this file).</p>\n<p>root@c45dc06aa8fb:/# ftp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />ftp&gt; open<br />(to) 193.20.1.2<br />Connected to 193.20.1.2.<br />220 (vsFTPd 3.0.3)<br />Name (193.20.1.2:root): anonymous<br />331 Please specify the password.<br />Password:<br />230 Login successful.<br />Remote system type is UNIX.<br />Using binary mode to transfer files.<br />ftp&gt; ls<br />200 PORT command successful. Consider using PASV.<br />150 Here comes the directory listing.<br />-rw-------&nbsp;&nbsp;&nbsp; 1 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7025 Apr 08 00:20 sensitive_information<br />226 Directory send OK.<br />ftp&gt; get sensitive_information <br />local: sensitive_information remote: sensitive_information<br />200 PORT command successful. Consider using PASV.<br />550 Failed to open file.<br />ftp&gt; quit<br />221 Goodbye.<br />root@c45dc06aa8fb:/# tftp 193.20.1.3<br />tftp&gt; get sensitive_information<br />Received 7129 bytes in 0.0 seconds<br />tftp&gt; quit<br />root@c45dc06aa8fb:/# ls<br />bin&nbsp;&nbsp; dev&nbsp; home&nbsp; lib64&nbsp; mnt&nbsp; proc&nbsp; run&nbsp;&nbsp; sensitive_information&nbsp; sys&nbsp; usr<br />boot&nbsp; etc&nbsp; lib&nbsp;&nbsp; media&nbsp; opt&nbsp; root&nbsp; sbin&nbsp; srv&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp&nbsp; var<br />root@c45dc06aa8fb:/#</p>","author":"emalderson"}
